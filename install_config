#!/bin/bash

SCRIPTS=~/bin
VIM_SYNTAX=~/.vim/syntax
VIM_TEMPLATES=~/.vim/templates
OLD_PWD=$PWD

THIS_SCRIPT=$(realpath $0)
SYNC=$(dirname $THIS_SCRIPT)
SYNC_CONFIG=$SYNC/dotfiles
SYNC_SCRIPTS=$SYNC/scripts
SYNC_VIM_SYNTAX=$SYNC/vim/syntax
SYNC_VIM_TEMPLATES=$SYNC/vim/templates

cd $SYNC

# Look for updates.
git pull

# Create dirs if they do not exist.
mkdir -p $VIM_SYNTAX $VIM_TEMPLATES

# Removes symbolic links if they exist.
remove_ln() {
  if [ -L $1/$2 ]
    then
        rm $1/$2
  fi
}

# Create symbolic links for main config files.
for f in $(ls $SYNC_CONFIG);
do
  remove_ln ~ .$f
  ln -sv $SYNC_CONFIG/$f ~/.$f
done;

# Create symbolic links for scripts.
for f in $(ls $SYNC_SCRIPTS);
do
  remove_ln $SCRIPTS $f
  ln -sv $SYNC_SCRIPTS/$f $SCRIPTS/$f
done;

# Create symbolic links for this script.
remove_ln $SCRIPTS $(basename $0)
ln -sv $THIS_SCRIPT $SCRIPTS/$(basename $0)

# Copy symbolic links for special vim syntax files.
for f in $(ls $SYNC_VIM_SYNTAX);
do
  remove_ln $VIM_SYNTAX $f
  ln -sv $SYNC_VIM_SYNTAX/$f $VIM_SYNTAX/$f
done;

# Copy symbolic links for special vim syntax files.
for f in $(ls $SYNC_VIM_TEMPLATES);
do
  remove_ln $VIM_TEMPLATES $f
  ln -sv $SYNC_VIM_TEMPLATES/$f $VIM_TEMPLATES/$f
done;

# push to GitHub
git add -A
git commit -m "New backup $(date +'%Y-%m-%d %H:%M:%S')"
git push origin main

cd $OLD_PWD
