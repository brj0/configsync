#!/bin/bash

# This script creates symbolic links for several dotfiles. Existing dotfiles
# will not be replaced.

this_script=$(realpath $0)
this_script_dir=$(dirname $this_script)
config_dir=$(dirname $this_script)'/config'

# Look for updates.
git -C $this_script_dir pull

# Files and dirs to sync.
sync_files=$(find $config_dir -mindepth 1 -type f)
sync_dirs=$(find $config_dir -mindepth 1 -type d)

# Target dirs containing symbolic links.
home_dirs=$(echo "$sync_dirs" | sed "s|^$config_dir|$HOME|")

# Create all dirs in home dir if they do not exist.
mkdir -p $home_dirs

# Create symbolic links for all files
for f in $sync_files;
do
    f_ln=$(echo "$f" | sed "s|^$config_dir|$HOME|")
    # Removes symbolic links if they exist.
    if [ -L $f_ln ]; then
        rm $f_ln
        ln -s $f $f_ln
    else
        ln -sv $f $f_ln
    fi
done;

# Create symbolic link for this script in ~/bin.
this_script_ln=$HOME/bin/configsync
if [ -L $this_script_ln ]; then
    rm $this_script_ln
fi
ln -s $this_script $this_script_ln

# Push to GitHub
git -C $this_script_dir add -A
git -C $this_script_dir commit -m "New backup $(date +'%Y-%m-%d %H:%M:%S')"

if [ -n "$(git -C $this_script_dir log --branches --not --remotes)" ]; then
    echo "Changes detected."
else
    echo "No changes detected"
fi

git -C $this_script_dir push origin main
