#!/usr/bin/env python3

#despace: find and replace space characters in filenames by underscore
#Copyright (C) 16.09.2021 brj0
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <https://www.gnu.org/licenses/>.


import os
import os.path
import sys
import argparse

def parser():
    parser = argparse.ArgumentParser(
        description="""replace space characters by underscore\
        character in filenames"""
    )
    parser.add_argument("files",
        help="""replace all space characters ' ' in filenames\
                by underscore characters '_'""",
        nargs='*'
    )
    parser.add_argument("-f", "--force",
        action="store_true",
        help="dont't prompt before renaming"
    )
    parser.add_argument("-l", "--list",
        action="store_true",
        help="list all files/subfiles containing space characters"
    )
    parser.add_argument("-r", "--recursive",
        action="store_true",
        help="""despace [list, if option --list set] files and directories\
            with their contents recursively"""
    )
    parser.add_argument("-v", "--verbose",
        action="store_true",
        help="explain what is being done"
    )
    args = parser.parse_args()
    if args.list == True and args.force == True:
        sys.exit("Optional command --list can't be used with --force")

    return args

def despace(name, path, args):
    if not " " in name:
        return False
    old = os.path.join(path, name)
    new = os.path.join(path, name.replace(" ", "_"))
    if args.list:
        print(old)
        return False
    if args.force:
        os.rename(old, new)
    if not args.force:
        print("despace: rename", name, "->", name.replace(" ", "_"), "?")
        if input() in {'y', 'Y', 'yes', 'Yes'}:
            os.rename(old, new)
        else:
            return False
    if args.verbose:
        print(old, "->", new)
    return True

def despace_rec(files, path, args):
    for f in files:
        if os.path.isdir(f):
            for dirpath, dirname, filename in os.walk(f, topdown=False):
                for name in filename:
                    despace(name, dirpath, args)
                for name in dirname:
                    despace(name, dirpath, args)
            despace(f, path, args)
        elif os.path.isfile(f):
            despace(f, path, args)
        else:
            sys.exit(str(f)+" is no File or Directory!")

def main():
    args = parser()
    if args.recursive:
        despace_rec(args.files, "", args)
        return True
    for name in args.files:
        despace(name, "", args)
    return True

if __name__ == "__main__":
    main()
